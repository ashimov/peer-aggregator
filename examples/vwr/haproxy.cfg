global
  stats socket /var/lib/haproxy/api.sock mode 777 level admin
  user        root
  log stdout format raw local0 info

defaults
  mode http
  timeout http-request 10s
  log global


  timeout http-keep-alive 300s
  timeout connect 10s
  timeout client 300s
  timeout server 300s
  option http-buffer-request

#### (lineQ) HAProxy BASIC Configuration ####
#### (lineQ) please adjust this config according to your needs ####
peers lineq
	bind 0.0.0.0:55555
	server haproxy1
	server lineq localhost:11111
backend room
	stick-table type integer size 2 expire 1d store gpc0 peers lineq
backend timestamps
	stick-table type string len 36 size 100k expire 2m store gpc1 peers lineq
frontend fe_main
	bind *:8089
	http-request track-sc0 int(1) table room
	http-request set-var(txn.has_cookie) req.cook_cnt(sessionid)
	http-request set-var(txn.t2) uuid()  if !{ var(txn.has_cookie) -m int gt 0 }
	http-response add-header Set-Cookie "sessionid=%[var(txn.t2)]; path=/" if !{ var(txn.has_cookie) -m int gt 0 }
	http-request set-var(txn.sessionid) req.cook(sessionid)
	http-request track-sc1 var(txn.sessionid) table timestamps if { var(txn.has_cookie) -m int gt 0 }
	http-request track-sc1 var(txn.t2) table timestamps if !{ var(txn.has_cookie) -m int gt 0 }
	acl has_slot sc_get_gpc1(1) eq 1
	acl free_slot sc_get_gpc0(0) gt 0
	http-request sc-inc-gpc1(1) if free_slot !has_slot
	use_backend bk_yes if has_slot
	default_backend bk_no
backend bk_yes
	mode http
	#### (lineq) change to actual ip:port(s) of your service
	server server 127.0.0.1:8889
backend bk_no
	mode http
	server lineq localhost:8060
